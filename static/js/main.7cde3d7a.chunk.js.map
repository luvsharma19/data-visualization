{"version":3,"sources":["reusableComponents/charts/mapChart.js","reusableComponents/charts/donutChart.js","reusableComponents/charts/barChart.js","reusableComponents/securityAttackCharts/mapChart.js","reusableComponents/securityAttackCharts/config.js","reusableComponents/securityAttackCharts/donutChart.js","reusableComponents/securityAttackCharts/barChart.js","dashboard/index.js","index.js"],"names":["mapData","require","Highcharts","MapChart","dataPoints","options","series","mapOptions","chart","map","data","highcharts","constructorType","DonutChart","donutOptions","plotBackgroundColor","plotBorderWidth","plotShadow","type","BarChart","barOptions","SecurityAttackMap","props","config","title","text","align","x","y","style","color","legend","verticalAlign","floating","layout","valueDecimals","backgroundColor","symbolRadius","symbolHeight","colorAxis","min","minColor","maxColor","dataClasses","to","from","animation","name","states","hover","borderColor","tooltip","valueSuffix","shadow","state","this","setState","React","Component","SecurityAttackDonutChart","pointFormat","accessibility","point","plotOptions","pie","cursor","dataLabels","enabled","size","innerSize","colorByPoint","Box","className","justify","gap","listStyleType","item","Text","SecurityAttackBarChart","xAxis","categories","yAxis","gridLineColor","bar","Dashboard","fill","pad","background","Heading","margin","top","bottom","level","direction","border","fontWeight","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cde3d7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst mapData = require('@highcharts/map-collection/custom/world-highres.geo.json');\r\n\r\n// Load Highcharts modules\r\nrequire('highcharts/modules/map')(Highcharts);\r\n\r\nconst MapChart = ({\r\n    dataPoints = [],\r\n    options = {\r\n        series: [],\r\n    },\r\n}) => {\r\n    const mapOptions = {\r\n        ...options,\r\n        chart: {\r\n            map: mapData,\r\n        },\r\n    };\r\n\r\n    if (mapOptions.series) {\r\n        mapOptions.series[0].data = dataPoints;\r\n    } else {\r\n        mapOptions.series = [\r\n            {\r\n                data: dataPoints,\r\n            },\r\n        ];\r\n    }\r\n\r\n    return (\r\n        <HighchartsReact\r\n            highcharts={Highcharts}\r\n            constructorType='mapChart'\r\n            options={mapOptions}\r\n        />\r\n    );\r\n};\r\n\r\nMapChart.propTypes = {\r\n    options: PropTypes.object,\r\n    dataPoints: PropTypes.array,\r\n};\r\n\r\nexport default MapChart;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst DonutChart = ({\r\n    dataPoints = [],\r\n    options = {\r\n        series: [],\r\n    },\r\n}) => {\r\n    const donutOptions = {\r\n        ...options,\r\n        chart: {\r\n            plotBackgroundColor: null,\r\n            plotBorderWidth: null,\r\n            plotShadow: false,\r\n            type: 'pie',\r\n        },\r\n    };\r\n\r\n    if (donutOptions.series) {\r\n        donutOptions.series[0].data = dataPoints;\r\n    } else {\r\n        donutOptions.series = [\r\n            {\r\n                data: dataPoints,\r\n            },\r\n        ];\r\n    }\r\n\r\n    return <HighchartsReact highcharts={Highcharts} options={donutOptions} />;\r\n};\r\n\r\nDonutChart.propTypes = {\r\n    options: PropTypes.object,\r\n    dataPoints: PropTypes.array,\r\n};\r\n\r\nexport default DonutChart;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst BarChart = ({\n    dataPoints = [],\n    options = {\n        series: [],\n    },\n}) => {\n    const barOptions = {\n        ...options,\n        chart: {\n            type: 'bar',\n        },\n    };\n\n    if (barOptions.series) {\n        barOptions.series[0].data = dataPoints;\n    } else {\n        barOptions.series = [\n            {\n                data: dataPoints,\n            },\n        ];\n    }\n\n    return <HighchartsReact highcharts={Highcharts} options={barOptions} />;\n};\n\nBarChart.propTypes = {\n    options: PropTypes.object,\n    dataPoints: PropTypes.array,\n};\n\nexport default BarChart;\n","import React from 'react';\r\nimport { MapChart } from '../charts';\r\nimport { getMapConfig } from './config';\r\n\r\nclass SecurityAttackMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.config = getMapConfig();\r\n        this.state = {\r\n            dataPoints: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dataPoints = [\r\n            ['ae', 37],\r\n            ['af', 44],\r\n            ['at', 1900],\r\n            ['am', 20],\r\n            ['az', 19],\r\n            ['bd', 9],\r\n            ['bh', 12],\r\n            ['bn', 43],\r\n            ['ca', 5],\r\n            ['us', 35],\r\n            ['bt', 26],\r\n            ['cn', 3200],\r\n            ['cnm', 33],\r\n            ['cy', 48],\r\n            ['ge', 27],\r\n            ['id', 65],\r\n            ['il', 29],\r\n            ['in', 3000],\r\n            ['iq', 36],\r\n            ['ir', 70],\r\n            ['jk', 40],\r\n            ['jo', 31],\r\n            ['jp', 100],\r\n            ['kg', 52],\r\n            ['kh', 25],\r\n            ['kp', 45],\r\n            ['kr', 70],\r\n            ['kw', 35],\r\n            ['kz', 28],\r\n            ['no', 50],\r\n            ['se', 44],\r\n            ['fi', 49],\r\n            ['de', 1600],\r\n            ['cz', 1600],\r\n            ['uk', 1600],\r\n            ['la', 38],\r\n            ['lb', 46],\r\n            ['lk', 51],\r\n            ['mm', 13],\r\n            ['mn', 34],\r\n            ['my', 18],\r\n            ['nc', 47],\r\n            ['np', 50],\r\n            ['om', 5],\r\n            ['ph', 1],\r\n            ['pk', 39],\r\n            ['qa', 41],\r\n            ['ru', 1],\r\n            ['sa', 2],\r\n            ['sg', 65],\r\n            ['sh', 17],\r\n            ['sp', 10],\r\n            ['sy', 30],\r\n            ['th', 4],\r\n            ['tj', 22],\r\n            ['tl', 24],\r\n            ['tm', 32],\r\n            ['tr', 65],\r\n            ['tw', 49],\r\n            ['uz', 23],\r\n            ['vn', 21],\r\n            ['ye', 6],\r\n            ['it', 2500],\r\n            ['dk', 2500],\r\n            ['pl', 2500],\r\n            ['es', 2500],\r\n            ['fr', 2500],\r\n        ];\r\n\r\n        this.setState({\r\n            dataPoints,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { dataPoints } = this.state;\r\n        return <MapChart options={this.config} dataPoints={dataPoints} />;\r\n    }\r\n}\r\n\r\nexport default SecurityAttackMap;\r\n","const getMapConfig = () => ({\r\n    title: {\r\n        text: 'Attacks by Location',\r\n        align: 'left',\r\n        x: 10,\r\n        y: 20,\r\n        style: {\r\n            color: '#4d4848c4',\r\n            'font-size': '12px',\r\n            'font-weight': 600,\r\n        },\r\n    },\r\n    legend: {\r\n        title: {\r\n            text: 'Attacks per hour',\r\n            style: {\r\n                color: 'black',\r\n            },\r\n        },\r\n        align: 'left',\r\n        verticalAlign: 'bottom',\r\n        floating: true,\r\n        layout: 'vertical',\r\n        valueDecimals: 0,\r\n        backgroundColor: 'rgba(255, 255, 255, 0.85)',\r\n        symbolRadius: 0,\r\n        symbolHeight: 14,\r\n    },\r\n    colorAxis: {\r\n        min: 1,\r\n        minColor: '#fcf6ed',\r\n        maxColor: '#f4b04a',\r\n        dataClasses: [\r\n            {\r\n                to: 10,\r\n            },\r\n            {\r\n                from: 10,\r\n                to: 50,\r\n            },\r\n            {\r\n                from: 50,\r\n                to: 100,\r\n            },\r\n            {\r\n                from: 100,\r\n                to: 250,\r\n            },\r\n            {\r\n                from: 250,\r\n                to: 1000,\r\n            },\r\n            {\r\n                from: 1000,\r\n                to: 2500,\r\n            },\r\n            {\r\n                from: 2500,\r\n            },\r\n        ],\r\n    },\r\n    series: [\r\n        {\r\n            animation: true,\r\n            name: 'Attacks',\r\n            states: {\r\n                hover: {\r\n                    borderColor: '#876c62',\r\n                    color: '#ef6c00',\r\n                },\r\n            },\r\n            tooltip: {\r\n                valueSuffix: '/hour',\r\n            },\r\n            shadow: false,\r\n        },\r\n    ],\r\n});\r\n\r\nconst getDonutConfig = () => ({\r\n    title: {\r\n        text: 'Global Attack Type Distribution',\r\n        align: 'center',\r\n        y: 100,\r\n        style: {\r\n            color: '#4d4848c4',\r\n            'font-size': '12px',\r\n            'font-weight': 600,\r\n        },\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>',\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%',\r\n        },\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n        },\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Type',\r\n            size: '40%',\r\n            innerSize: '70%',\r\n            colorByPoint: true,\r\n        },\r\n    ],\r\n});\r\n\r\nconst getBarConfig = () => ({\r\n    title: {\r\n        text: 'Top 5 Industries By Avg Attacks Per Account, Last 30 Days',\r\n        align: 'center',\r\n        style: {\r\n            color: '#4d4848c4',\r\n            'font-size': '12px',\r\n            'font-weight': 600,\r\n        },\r\n    },\r\n    xAxis: {\r\n        categories: [\r\n            'Financial Services',\r\n            'Automotive',\r\n            'Software & Technology',\r\n            'Education',\r\n            'Business Services',\r\n        ],\r\n        title: {\r\n            text: null,\r\n        },\r\n    },\r\n    yAxis: {\r\n        min: 0,\r\n        gridLineColor: '#ffffff',\r\n        title: {\r\n            text: null,\r\n        },\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n        },\r\n    },\r\n    legend: {\r\n        align: 'center',\r\n        verticalAlign: 'bottom',\r\n        y: 20,\r\n        floating: true,\r\n        backgroundColor: '#FFFFFF',\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Average attacks per account',\r\n            color: '#FF9800',\r\n        },\r\n    ],\r\n});\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { getMapConfig, getDonutConfig, getBarConfig };\r\n","import React from 'react';\nimport { Box, Text } from 'grommet';\nimport { DonutChart } from '../charts';\nimport { getDonutConfig } from './config';\n\nclass SecurityAttackDonutChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.config = getDonutConfig();\n        this.state = {\n            dataPoints: [],\n        };\n    }\n\n    componentDidMount() {\n        const dataPoints = [\n            {\n                name: 'SQL INJECTION',\n                y: 44,\n                color: '#EF6C00',\n            },\n            {\n                name: 'CMD INJECTION',\n                y: 21,\n                color: '#ffa726',\n            },\n            {\n                name: 'PHP INJECTION',\n                y: 12,\n                color: '#ffca28c9',\n            },\n            {\n                name: 'LOCAL FILE INCLUDE',\n                y: 18,\n                color: '#FFEB3B',\n            },\n            {\n                name: 'CROSS-SITE SCRIPTING',\n                y: 5,\n                color: '#ffee58',\n            },\n        ];\n        this.setState({\n            dataPoints,\n        });\n    }\n\n    render() {\n        const { dataPoints } = this.state;\n        return (\n            <Box\n                className='security-attack-donut-chart'\n                justify='start'\n                align='center'\n                gap='small'\n            >\n                <DonutChart options={this.config} dataPoints={dataPoints} />\n                <Box className='security-attack-donut-legend'>\n                    <ul style={{ listStyleType: 'none' }}>\n                        {dataPoints.map((item) => {\n                            return (\n                                <li>\n                                    <Text size='small' color={item.color}>\n                                        {`${item.name} ${item.y}%`}\n                                    </Text>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Box>\n            </Box>\n        );\n    }\n}\n\nexport default SecurityAttackDonutChart;\n","import React from 'react';\nimport { BarChart } from '../charts';\nimport { getBarConfig } from './config';\n\nclass SecurityAttackBarChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.config = getBarConfig();\n        this.state = {\n            dataPoints: [],\n        };\n    }\n\n    componentDidMount() {\n        const dataPoints = [2400, 1900, 1700, 1400, 1200];\n        this.setState({\n            dataPoints,\n        });\n    }\n\n    render() {\n        const { dataPoints } = this.state;\n        return <BarChart options={this.config} dataPoints={dataPoints} />;\n    }\n}\n\nexport default SecurityAttackBarChart;\n","import React from 'react';\nimport { Box, Heading } from 'grommet';\nimport {\n    SecurityAttackMap,\n    SecurityAttackDonutChart,\n    SecurityAttackBarChart,\n} from '../reusableComponents/securityAttackCharts';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.name = 'luv';\n    }\n\n    render() {\n        return (\n            <Box fill pad='large' background='#eeeeeeb8'>\n                <Box fill='horizontal' justify='start' align='start'>\n                    <Heading\n                        margin={{ top: 'none', bottom: 'large' }}\n                        level='3'\n                        color='#000000'\n                    >\n                        Security visualizations\n                    </Heading>\n                    <Heading\n                        margin={{ top: 'none', bottom: 'small' }}\n                        level='6'\n                        color='#4d4848c4'\n                    >\n                        LATEST VISUALIZATIONS\n                    </Heading>\n                    <Box\n                        fill='horizontal'\n                        direction='row-responsive'\n                        justify='start'\n                        align='start'\n                        gap='medium'\n                    >\n                        <Box\n                            fill='horizontal'\n                            background='#ffffff'\n                            border={{\n                                size: '2px',\n                                color: '#77777763',\n                                type: 'solid',\n                            }}\n                        >\n                            <Box pad='small'>\n                                <Heading\n                                    style={{ fontWeight: 500 }}\n                                    margin={{ top: 'none', bottom: 'small' }}\n                                    level={6}\n                                    size='18px'\n                                    color='#ff9800'\n                                >\n                                    Real Time Attack Visualization\n                                </Heading>\n                            </Box>\n                            <Box\n                                direction='row-responsive'\n                                justify='start'\n                                align='center'\n                                fill='horizontal'\n                                pad={{ bottom: '35px' }}\n                            >\n                                <SecurityAttackMap />\n                                <SecurityAttackDonutChart />\n                            </Box>\n                        </Box>\n                        <Box\n                            background='#ffffff'\n                            border={{\n                                size: '2px',\n                                color: '#77777763',\n                                type: 'solid',\n                            }}\n                        >\n                            <Box pad='small'>\n                                <Heading\n                                    style={{ fontWeight: 500 }}\n                                    margin={{ top: 'none', bottom: 'small' }}\n                                    level={6}\n                                    size='18px'\n                                    color='#ff9800'\n                                >\n                                    Industry Attack Dashboard\n                                </Heading>\n                                <Box pad={{ bottom: '48px' }} width='800px'>\n                                    <SecurityAttackBarChart />\n                                </Box>\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n"],"sourceRoot":""}